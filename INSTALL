* postać katalogu z kartoteką:
  * plik config.cfg, może zawierać (wszystkie elementy opcjonalne):
  	* db<TAB>NAZWA_BAZY_DANYCH_KAROTEKI<NL>
  	* dbuser<TAB>UZYTKOWNIK_BAZY_DANYCH<NL>
  	* dbpass<TAB>HASLO_UZYTKOWNIKA<NL>
  	* hocr_cut<TAB>LICZBA<NL> (LICZBA - w jakiej części pliku hOCR jest hasło na fiszce - jeżeli wpisane jest 0.1 to znaczy, że hasło jest w górnych 10% pliku)
  	* default_task_register<TAB>DOMYSLNY_WYKAZ_ZADANIOWY<NL> (ten wykaz musi się znajdować w karotece)
  * domyślny wykaz zadaniowy (opcjonalnie), postaci:
  	INDENTYFIKATOR_FISZKI<NL>
  * indeks struktury (index.ind)
  * hint.reg - wykaz podpowiedzi
  * user_hint.reg - wykaz podpowiedzi dodanych przez maleksa, tworzony automatycznie
  * katalogi z fiszkami i hOCR lub podkatalogami

* postać indeksu struktury
  * przykładowy plik, białe znaki na początku wiersza ignorowane,
    // - komentarze, nie powinny się znaleźć w prawdziwym pliku:
$alphabetic // element opcjonalny, oznacza, że fiszki są uporządkowane alfabetycznie według haseł,
// wykaz haseł nie powinien np. działać dla fiszek nieuporządkowanych (ale to nie jest do końca przetestowane)
$<SPACJA>Do<TAB>Do8 // odpowiada katalogowi Do8, Do to nazwa która wyświetli się w programie
	$<SPACJA>Partia 1<TAB>Partia_01 // podkatalog Partia_01 katalogu Do8 itd.
		$from_names_djvu<TAB>$all // nadaj wszystkim fiszkom z katalogu Partia_01 identyfikatory będące nazwami ich plików
	$end
	$<SPACJA>Partia 2<TAB>Partia_02
		$id01<TAB>fiszka_01 // nadaj fiszce z pliku fiszka_01.djvu identyfikator id01 (nietestowane)
		$id02<TAB>fiszka_02
	$end
$end
$<SPACJA>Dwa-Dwojdroże<TAB>Dwa2-Dwojdroże
	$<SPACJA>Partia 1<TAB>Partia_01
		$from_names_djvu<TAB>$all
	$end
$end
$<SPACJA>Dziób-Dzwon<TAB>Dziób-Dzwon
	$from_names_djvu<TAB>$all
$end
$<SPACJA>Emundowani-Ę<TAB>Emundowani-Ę
	$from_names_djvu<TAB>$all
$end
$<SPACJA>G-Ganić<TAB>G-Ganić
	$from_names_djvu<TAB>$all
$end

* instalacja:
  * trzeba zainstalować wxpython, python-djvu i python-icu (co najmniej wersja 1.0)
  * ./update18n
  * W katalogu os.path.dirname(sys.argv[0]) powinien się znaleźć katalog 'locale' ze źródeł maleksa z tłumaczeniami komunikatów. U mnie jest to /usr/local/bin. Działa to z fragmentem:
  	  _ = gettext.translation('maleks', os.path.join(os.path.dirname(sys.argv[0]), 'locale'), languages=['pl']).ugettext
    z pliku i18n.py, który dodałem bo znajdująca się powyżej pętla for z djvusmooth mi z jakiegoś powodu nie działała.
  * sudo python setup.py install
  * utworzyć plik konfiguracyjny $HOME/.config/maleks/maleks.conf:
	  db=<BAZA>
		dbpass=<HASLO>
		dbuser=<UZYTKOWNIK>
		loglevel=DEBUG
		(podajemy domyślną konfigurację bazy danych której będą używać kartoteki jeżeli nie będzie wpisu w ich pliku config.cfg - ponieważ każda kartoteka musi mieć osobną bazę dobrze w config.cfg umieszczać wpis db, a użytkownika i hasło zdefiniować w maleks.conf)

* każda karoteka powinna być w osobnej bazie danych
* W pliku konfiguracyjnym mysql (my.cnf, u mnie jest w /etc/mysql/my.cnf) do wpisów pod [mysqld] dodać:
  character_set_server=utf8
  collation_server=utf8_polish_ci
  character_set_client=utf8
* Bazę należy utworzyć poleceniem:
  create database BAZA character set = utf8 collate = utf8_polish_ci;
* maleks.sql - skrypt tworzący tabele
* żeby poniższe skrypty działały trzeba zainstalować maleksa (sudo python setup.py install):
  * dbprepare.py KATALOG_Z_KAROTEKĄ - inicjalizuję bazę danych
  * dbreset.py KATALOG_Z_KARTOTEKĄ - usuwa wszystkie zaindeksowane hasła z bazy danych

